import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the image
image_path = '/content/17.1.png'
image = cv2.imread(image_path)

# Convert the image to grayscale
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Apply GaussianBlur to reduce noise and help contour detection
blurred = cv2.GaussianBlur(gray, (15, 15), 0)

# Use Canny edge detection
edges = cv2.Canny(blurred, 55, 150)

# Find contours
contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# Draw contours on a copy of the original image
image_with_contours = image.copy()
cv2.drawContours(image_with_contours, contours, -1, (0, 255, 0), 2)

with open('17_1.txt', 'w') as file:
    for contour in contours:
        for point in contour:
            x, y = point[0]
            file.write(f'{x},{y}\n')

# Display the results
plt.figure(figsize=(12, 6))
plt.subplot(131), plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB)), plt.title('Original Image')
plt.subplot(132), plt.imshow(edges, cmap='gray'), plt.title('Canny Edges')
plt.subplot(133), plt.imshow(cv2.cvtColor(image_with_contours, cv2.COLOR_BGR2RGB)), plt.title('Image with Contours')
plt.show()